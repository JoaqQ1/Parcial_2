// QUIROGA JOAQUIN PARCIAL 2

#include <LiquidCrystal.h>
#include <Servo.h>
#include <IRremote.h>


// #CONSTANTES
#define LED_ROJO 12
#define LED_AMARILLO 10
#define SERVO 9
#define TEMP A1
#define REMOTOIR 11
#define ON 0xFF00BF00
#define OFF 0xFD02BF00 

LiquidCrystal lcd(8,7,2,3,4,5);
Servo miServo;



// VARIABLES
float grados = 0;
int vueltas = 0;
int incremento = 0;
float temperatura;
String estacion;

//LLAMADAS A FUNCIONES

int increntar_decrementar(int numero,int incre_decre);
String retorna_estacion(int temp);
void activar_sensor_tem(Servo mi_servo,LiquidCrystal lcd,float temp,int led_1,int led_2);
void titilar_leds(int led_1,int led_2,int delay);

void setup()
{
  //SALIDA
  lcd.begin(16,2);
  pinMode(LED_ROJO,OUTPUT);
  pinMode(LED_AMARILLO,OUTPUT);

  //ENTRADA
  pinMode(REMOTOIR, INPUT);
  IrReceiver.begin(REMOTOIR, DISABLE_LED_FEEDBACK);
  
  miServo.attach(SERVO, 500, 2500);
  Serial.begin(9600);
}

void loop()
{
  miServo.write(grados);
  IrReceiver.decode();
  
  switch(IrReceiver.decodedIRData.decodedRawData)
  {
    case ON:
    	Serial.println("Sistema de temperatura encendido");
      	//Se hace una limpieza del lcd para que no queden caracteres no deseados
    	
    	lcd.clear();
    	lcd.setCursor(0,0);
    	lcd.print("Temp:");
        lcd.setCursor(6,0);
        temperatura = map(analogRead(TEMP),0,1023,-50,450);
        
    	lcd.print(temperatura);
        lcd.print(" C");
        lcd.cursor();
        lcd.setCursor(0,1);
    	
    	estacion = retorna_estacion(temperatura);
    	if(estacion != "FUEGO")
        {
          lcd.print("Estacion:");
        }
    	else
        {
          lcd.print("PELIGRO ");

        }
        lcd.print(estacion);
    	
    	if (estacion == "FUEGO")
  		{
          Serial.println("ALARMA ACTIVADA");
          titilar_leds(12,10,100);
          grados = map(vueltas,0,10,0,180);
          vueltas = increntar_decrementar(vueltas,incremento);
          
          if (vueltas ==10)
          {
            incremento = 1;
          }
          else if(vueltas == 0)
          {
            incremento = 0;
          }
      
        }
    	break;
    case OFF:
    	lcd.clear();
    	lcd.setCursor(0,0);
    	lcd.print("Sistema apagado");
    	Serial.println("apagado");

    	break;
  }
  IrReceiver.resume();
  delay(100);
}

/*  ################ FUNCIONES ################  */

int increntar_decrementar(int numero,int incre_decre)
{
  if (incre_decre == 0)
  {
    numero++;
  }
  else if (incre_decre == 1)
  {
    numero--;
  }
  return numero;
} 

	


void titilar_leds(int led_1,int led_2,int delays)
{
  digitalWrite(led_1,1);
  delay(delays);
  digitalWrite(led_1,LOW);
  delay(delays);
  digitalWrite(led_2,1);
  delay(delays);
  digitalWrite(led_2,LOW);
  delay(delays);
  
}


String retorna_estacion(int temp)
{
  String estacion;
  if(temp < 0)
  {
    estacion = "Invierno";
  }
  else if(temp > -1 && temp < 16){
    estacion = "Otono";
  }
  else if(temp > 14 && temp < 25)
  {
    estacion = "Primavera";
  }
  else if(temp > 24 && temp < 60)
  {
    estacion = "Verano";
  }
  else
  {
    estacion = "FUEGO";
  }
  return estacion;
}


